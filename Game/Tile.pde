class Tile {
  /*A Tile holds properties of the terrain */
  int slope;   //Slope of tile
  int soil;  
  int xpos;  //x-coordinate
  int ypos;  //y-coordinate
  float distToRiver;   //This is calculated only when a landuse (non-greenField) is added.
  LandUse landU;
  
  Tile(LandUse lu, int x, int y, int sl, int so) {
   /* Constructor: Initializes Tile with LandUse lu, and integer slope sl, soil so values */
   landU = lu;
   xpos = x;
   ypos = y;
   slope = sl;
   soil = so;
  }
  
  int getSlope() {
    /*Retuns slope of the tile */
    return slope;
  }
  
  int getSoil() {
    /* Returns the soil permeability of the tile */
    return soil;
  }
  
  LandUse getLandU() {
    /* Returns the LandUse object of the Tile */
    return landU;
  }
  
  void changeLandUse(LandUse lu) {
    /* Changes the LandUse held by the Tile to lu */
    landU = lu;
  }
  
  float getPollution() {
    /* Returns the pollution generated by the LandUse held by the Tile */
    if (! (landU instanceof River)) {
      return landU.getPollution();
    }else return 0;
  }
  
  // ----  Some geometry methods ---- //
  int getX(){
    /* Returns the xpos of the tile */
    return xpos;
  }
  
  int getY(){
    /* Returns the xpos of the tile */
    return ypos;
  }
  
  @Override
  public String toString() {
    return "<" + str(xpos) + ", " + str(ypos)+ ">";
  }
}